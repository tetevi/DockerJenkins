pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'tt835w/flask-app'
        IMAGE_TAG = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                // Explicitly specifying the branch as 'main' to avoid ambiguity
                git branch: 'main', url: 'https://github.com/tetevi/DockerJenkins.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Building the Docker image with a unique tag based on the build number
                    docker.build("${DOCKER_IMAGE}:${IMAGE_TAG}")
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    // Login to Docker Hub using credentials stored in Jenkins
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-creds') {
                        // Authentication happens here, and subsequent Docker commands use this registry
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Pushing the Docker image to Docker Hub
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-creds') {
                        docker.image("${DOCKER_IMAGE}:${IMAGE_TAG}").push()
                    }
                }
            }
        }
    }

    post {
        always {
            // Cleaning up Docker images after the pipeline completes
            echo "Cleaning up Docker images"
            sh "docker rmi ${DOCKER_IMAGE}:${IMAGE_TAG} || true"
        }
    }
}
